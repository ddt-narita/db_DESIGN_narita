演習01-02
システム開発のプロジェクトがテスト工程にかかった時以下の問題がおこったどのような変更によって
解決することが可能か、思いつくだけの方法を提案する
作成日：6月15日
作成者：成田修之

問題1、性能試験において、ある夜間バッチ処理のSQLの性能が非常に悪く、要件上は1時間で終了するべき
SQLが10時間以上かかることが分かった

問題2　画面からオンラインで出力する帳票において、現在のレイアウトでは不足していることが分かった。
顧客との要件調節に漏れがあったことが原因だった。

問題1
解決案
設計側で余計な処理を行ってしまっている部分がないかを見直し
実装側ではデータへの結合など時間がかかってしまうようなところはなるべく減らしてから
行うようにする

問題2
解決案
顧客との要件のすり合わせをしっかり行う。
足りない情報をほかの情報になるべく変化のないように付け足す



解説

問題1
対処として段階別に3つある
1．SQLのアクセスパスを最適化する
SQL分を実行される際には統計情報などから変換が起こるがこれが最適化はわからない。これが原因で
性能問題が起こっている場合には、適切な列に対するインデックスを付与する、実行計画をユーザー
が直接指定する機能を使うといったところで対処する
これで改善する分にはシステム自体のへんこうがなく手戻りを小さく抑えることができる

2．アプリケーションの回収を行う
非効率なコードを排除したり、取得データ量を減らすといった方法をとって効率化する
システムの実装と設計に変更が必要な回収方法なのでコストは大きい

3．テーブルのレイアウトを変更する
非正規化、データマートの追加といったテーブルの定義の変更を行う。
データがプログラムを決定するという原則から多くのアプリケーションに影響があり、
災厄の場合1から作り直すのと同義になるケースも

問題2
問題1のように性能用件が問題となるケースでは対処次第ではコストを抑えられたが、
このようなケースではアプリケーション以上のものを改修しなければならないことになることが多い
なるべく既存のテーブル群を変えることなく、必要な情報を付加したデータマートを追加するという
アドホックな修正によって改修コストを下げていくしかない。