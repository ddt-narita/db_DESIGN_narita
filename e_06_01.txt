演習06-01
ビットマップインデックスとハッシュインデックスの長所と短所を調べる
作成日：6月16日
作成者：成田修之

ビットマップインデックス
概要
検索列と各レコードがその値に位置するかどうかのビットマップを保持し、
検索処理ではビットの有無で検索条件に当てはまるかどうかの判定を行う

長所
カーディナリティーの低い複数の複数の列を条件に指定している場合など
各列にビットマップを作成しておくことで高速な検索を行うことができる

短所
カーディナリティが高いものに関しては保持するビットマップ数が多くなり
Btreeに比べて検索速度が遅くなってしまう


ハッシュインデックス
概要
ハッシュ関数と呼ばれる関数を使って検索に使用するキーとレコードを
含むページを直接関連づける。

長所
Btreeでは何回もディスクにアクセスしなけらばならないがハッシュインデックス
であればハッシュ関数によって一回のアクセスでレコードを取得できる

短所
レコードの特定には使えるがBtreeのように範囲検索を行うことができない。
ハッシュ関数の選び方がテーブルの構造に影響するのでテーブル作成の時点で
どのようなハッシュ関数を使うかを決めておかなければならない。